{"version":3,"sources":["components/AddCategory.js","services/GifsService.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGits","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GitGrid","loading","state","setState","useEffect","then","useFetchGifs","GitExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"2MA4BeA,EAzBK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAczC,OACE,sBAAMC,SARR,SAAsBC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,GAC7BR,GAAc,SAACS,GAAD,OAAUP,GAAV,mBAAyBO,OACzCN,EAAc,KAId,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAb1C,SAA2BP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVhB,kBAadM,GAbc,4CAAH,sDCWLO,EATK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAChC,OACE,sBAAKc,UAAU,+DAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QC0BKO,EA5BC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACdd,mBAAS,CAAEqB,KAAM,GAAIa,SAAS,IADhB,mBACjCC,EADiC,KAC1BC,EAD0B,KASxC,OANAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACjB,GACtBe,EAAS,CAAEf,KAAMA,EAAMa,SAAS,SAEjC,CAACpB,IAEGqB,EDC2BI,CAAazB,GAAjCa,EATkB,EASxBN,KAAca,EATU,EASVA,QAEtB,OACE,qCACE,6BAAKpB,IACJoB,GACC,mBAAGJ,UAAU,oCAAb,yBAEF,qBAAKA,UAAU,YAAf,SACE,6BACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,eECnBe,EArBM,WAAM,MAEWxC,mBAAS,CAAC,eAFrB,mBAElByC,EAFkB,KAEN1C,EAFM,KAMzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACG0C,EAAWlB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCbxB4B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.04a2ab3d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport * as PropTypes from 'prop-types';\n//rsc\nconst AddCategory = ({ setCategorias }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  function handleInputChange(e) {\n    setInputValue(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (inputValue.trim().length > 2)\n      setCategorias((cat) => [inputValue, ...cat]);\n    setInputValue('');\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategorias: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","export const getGits = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=3SckUB1kdddrrNyTx33FevTuNZf657rO`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images.downsized_medium.url,\n    };\n  });\n  return gifs;\n};\n","import React from 'react';\n\nconst GifGridItem = ({ id, title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeInDown animate__delay-1s\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n\nexport default GifGridItem;\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GitGrid = ({ category }) => {\n  /*  const [images, setImages] = useState([]);\n\n    useEffect(() => {\n      getGits(category).then((imgs) => {\n        setImages(imgs);\n      });\n    }, [category]);*/\n\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3>{category}</h3>\n      {loading && (\n        <p className=\"animate__animated animate__shakeX\">Cargando...</p>\n      )}\n      <div className=\"card-grid\">\n        <ol>\n          {images.map((img) => (\n            <GifGridItem key={img.id} {...img} />\n          ))}\n        </ol>\n      </div>\n    </>\n  );\n};\n\nexport default GitGrid;\n","import { useState, useEffect } from 'react';\nimport { getGits } from '../services/GifsService';\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({ data: [], loading: true });\n\n  useEffect(() => {\n    getGits(category).then((data) => {\n      setState({ data: data, loading: false });\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GitGrid from './components/GifGrid';\n\nconst GitExpertApp = () => {\n  //const categiriasDefault = ['One Punch', 'Samurai X', 'Dragon Ball']\n  const [categorias, setCategorias] = useState(['Gan Torino']);\n  /*const handleAdd = () =>{\n            setCategorias([...categorias,'Thundercats']);\n        }*/\n  return (\n    <>\n      <h2>GitExpertApp</h2>\n      <AddCategory setCategorias={setCategorias}></AddCategory>\n      <hr />\n      {/*<button onClick={handleAdd}>Agregar</button>*/}\n      <ol>\n        {categorias.map((category) => (\n          <GitGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GitExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GitExpertApp from './GitExpertApp';\n\nReactDOM.render(<GitExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}